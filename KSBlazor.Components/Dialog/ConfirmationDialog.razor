@namespace KSBlazor.Components

<div class="modal fade show" id="confirmationModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
   <div class="modal-dialog">
      <div class="modal-content">
         <div class="modal-header">
            <h4 class="modal-title">@Caption</h4>
            <button type="button" class="close"
               @onclick="@Cancel">&times;</button>
         </div>
         <div class="modal-body">
            <p>@Message</p>
            @ChildContent
         </div>
         <div class="modal-footer">
            @switch (Type)
            {
               case DialogType.Okay:
                  <button type="submit" form="@FormId" class="btn btn-primary"
                          @onclick=@Ok>OK</button>
                  break;
               case DialogType.Save:
                  <button type="submit" form="@FormId" class="btn btn-primary"
                     @onclick=@Ok>Save</button>
                  <button type="button" class="btn btn-secondary"
                     @onclick="@Cancel">Cancel</button>
                  break;
               case DialogType.Delete:
                  <button type="submit" form="@FormId" class="btn btn-danger"
                     @onclick=@Ok>Delete</button>
                  <button type="button" class="btn btn-secondary"
                     @onclick="@Cancel">Cancel</button>
                  break;
               case DialogType.None :
                  break;
            }
         </div>
      </div>
   </div>
</div>
@code {
   [Parameter] public string Caption { get; set; }
   [Parameter] public string Message { get; set; }
   [Parameter] public EventCallback<bool> OnClose { get; set; }
   [Parameter] public string FormId { get; set; }
   [Parameter] public DialogType Type { get; set; }
   [Parameter] public RenderFragment ChildContent { get; set; }
private Task Cancel()
   {
      return OnClose.InvokeAsync(false);
   }
private Task Ok()
   {
      return OnClose.InvokeAsync(true);
   }
public enum DialogType
   {
      Okay,
      Save,
      Delete,
      None
   }
}